Use hidden symbol visibility for internal utility functions
--- a/src/powercap-common.h
+++ b/src/powercap-common.h
@@ -49,43 +49,43 @@
 #endif
 
 /* buf must not be NULL and size >= 1 */
-ssize_t read_string_safe(int fd, char* buf, size_t size);
+ssize_t read_string_safe(int fd, char* buf, size_t size) __attribute__ ((visibility("hidden")));
 
 /* Return number of bytes read (including terminating NULL char) on success, negative error code on failure */
-ssize_t read_string(int fd, char* buf, size_t size);
+ssize_t read_string(int fd, char* buf, size_t size) __attribute__ ((visibility("hidden")));
 
 /* Return 0 on success, negative error code on failure */
-int read_u64(int fd, uint64_t* val);
+int read_u64(int fd, uint64_t* val) __attribute__ ((visibility("hidden")));
 
 /* Return 0 on success, negative error code on failure */
-int write_u64(int fd, uint64_t val);
+int write_u64(int fd, uint64_t val) __attribute__ ((visibility("hidden")));
 
 /* Return is like snprintf, or negative error code if parameters are bad */
-int zone_file_get_name(powercap_zone_file type, char* buf, size_t size);
+int zone_file_get_name(powercap_zone_file type, char* buf, size_t size) __attribute__ ((visibility("hidden")));
 
 /* Return is like snprintf, or negative error code if parameters are bad */
-int constraint_file_get_name(powercap_constraint_file type, uint32_t constraint, char* buf, size_t size);
+int constraint_file_get_name(powercap_constraint_file type, uint32_t constraint, char* buf, size_t size) __attribute__ ((visibility("hidden")));
 
 /*
  * Returns 0 on failure like insufficient buffer size or if control_type is NULL.
  * zones can be NULL only if depth is 0; path must not be NULL.
  */
-size_t get_base_path(const char* control_type, const uint32_t* zones, uint32_t depth, char* path, size_t size);
+size_t get_base_path(const char* control_type, const uint32_t* zones, uint32_t depth, char* path, size_t size) __attribute__ ((visibility("hidden")));
 
 /* Returns 0 on failure like insufficient buffer size */
 size_t get_zone_file_path(const char* control_type, const uint32_t* zones, uint32_t depth, powercap_zone_file type,
-                          char* path, size_t size);
+                          char* path, size_t size) __attribute__ ((visibility("hidden")));
 
 /* Returns 0 on failure like insufficient buffer size */
 size_t get_constraint_file_path(const char* control_type, const uint32_t* zones, uint32_t depth, uint32_t constraint,
-                                powercap_constraint_file type, char* path, size_t size);
+                                powercap_constraint_file type, char* path, size_t size) __attribute__ ((visibility("hidden")));
 
 /* Return fd on success, negative error code if path is too large, -1 on open failure */
-int open_zone_file(const char* control_type, const uint32_t* zones, uint32_t depth, powercap_zone_file type, int flags);
+int open_zone_file(const char* control_type, const uint32_t* zones, uint32_t depth, powercap_zone_file type, int flags) __attribute__ ((visibility("hidden")));
 
 /* Return fd on success, negative error code if path is too large, -1 on open failure */
 int open_constraint_file(const char* control_type, const uint32_t* zones, uint32_t depth, uint32_t constraint,
-                         powercap_constraint_file type, int flags);
+                         powercap_constraint_file type, int flags) __attribute__ ((visibility("hidden")));
 
 #ifdef __cplusplus
 }
